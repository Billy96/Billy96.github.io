(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

/* eslint-disable node/no-unsupported-features/node-builtins */
(function ($, moment, ClipboardJS, config) {
  $('.article img:not(".not-gallery-item")').each(function () {
    // wrap images with link and add caption if possible
    if ($(this).parent('a').length === 0) {
      $(this).wrap('<a class="gallery-item" href="' + $(this).attr('src') + '"></a>');

      if (this.alt) {
        $(this).after('<p class="has-text-centered is-size-6 caption">' + this.alt + '</p>');
      }
    }
  });

  if (typeof $.fn.lightGallery === 'function') {
    $('.article').lightGallery({
      selector: '.gallery-item'
    });
  }

  if (typeof $.fn.justifiedGallery === 'function') {
    if ($('.justified-gallery > p > .gallery-item').length) {
      $('.justified-gallery > p > .gallery-item').unwrap();
    }

    $('.justified-gallery').justifiedGallery();
  }

  if (typeof moment === 'function') {
    $('.article-meta time').each(function () {
      $(this).text(moment($(this).attr('datetime')).fromNow());
    });
  }

  $('.article > .content > table').each(function () {
    if ($(this).width() > $(this).parent().width()) {
      $(this).wrap('<div class="table-overflow"></div>');
    }
  });

  function adjustNavbar() {
    var navbarWidth = $('.navbar-main .navbar-start').outerWidth() + $('.navbar-main .navbar-end').outerWidth();

    if ($(document).outerWidth() < navbarWidth) {
      $('.navbar-main .navbar-menu').addClass('justify-content-start');
    } else {
      $('.navbar-main .navbar-menu').removeClass('justify-content-start');
    }
  }

  adjustNavbar();
  $(window).resize(adjustNavbar);

  function toggleFold(codeBlock, isFolded) {
    var $toggle = $(codeBlock).find('.fold i');
    !isFolded ? $(codeBlock).removeClass('folded') : $(codeBlock).addClass('folded');
    !isFolded ? $toggle.removeClass('fa-angle-right') : $toggle.removeClass('fa-angle-down');
    !isFolded ? $toggle.addClass('fa-angle-down') : $toggle.addClass('fa-angle-right');
  }

  function createFoldButton(fold) {
    return '<span class="fold">' + (fold === 'unfolded' ? '<i class="fas fa-angle-down"></i>' : '<i class="fas fa-angle-right"></i>') + '</span>';
  }

  $('figure.highlight table').wrap('<div class="highlight-body">');

  if (typeof config !== 'undefined' && typeof config.article !== 'undefined' && typeof config.article.highlight !== 'undefined') {
    $('figure.highlight').addClass('hljs');
    $('figure.highlight .code .line span').each(function () {
      var classes = $(this).attr('class').split(/\s+/);

      if (classes.length === 1) {
        $(this).addClass('hljs-' + classes[0]);
        $(this).removeClass(classes[0]);
      }
    });
    var clipboard = config.article.highlight.clipboard;
    var fold = config.article.highlight.fold.trim();
    $('figure.highlight').each(function () {
      if ($(this).find('figcaption').length) {
        $(this).find('figcaption').addClass('level is-mobile');
        $(this).find('figcaption').append('<div class="level-left">');
        $(this).find('figcaption').append('<div class="level-right">');
        $(this).find('figcaption div.level-left').append($(this).find('figcaption').find('span'));
        $(this).find('figcaption div.level-right').append($(this).find('figcaption').find('a'));
      } else {
        if (clipboard || fold) {
          $(this).prepend('<figcaption class="level is-mobile"><div class="level-left"></div><div class="level-right"></div></figcaption>');
        }
      }
    });

    if (typeof ClipboardJS !== 'undefined' && clipboard) {
      $('figure.highlight').each(function () {
        var id = 'code-' + Date.now() + (Math.random() * 1000 | 0);
        var button = '<a href="javascript:;" class="copy" title="Copy" data-clipboard-target="#' + id + ' .code"><i class="fas fa-copy"></i></a>';
        $(this).attr('id', id);
        $(this).find('figcaption div.level-right').append(button);
      });
      new ClipboardJS('.highlight .copy'); // eslint-disable-line no-new
    }

    if (fold) {
      $('figure.highlight').each(function () {
        if ($(this).find('figcaption').find('span').length > 0) {
          var span = $(this).find('figcaption').find('span');

          if (span[0].innerText.indexOf('>folded') > -1) {
            span[0].innerText = span[0].innerText.replace('>folded', '');
            $(this).find('figcaption div.level-left').prepend(createFoldButton('folded'));
            toggleFold(this, true);
            return;
          }
        }

        $(this).find('figcaption div.level-left').prepend(createFoldButton(fold));
        toggleFold(this, fold === 'folded');
      });
      $('figure.highlight figcaption .fold').click(function () {
        var $code = $(this).closest('figure.highlight');
        toggleFold($code.eq(0), !$code.hasClass('folded'));
      });
    }
  }

  var $toc = $('#toc');

  if ($toc.length > 0) {
    var toggleToc = function toggleToc() {
      // eslint-disable-line no-inner-declarations
      $toc.toggleClass('is-active');
      $mask.toggleClass('is-active');
    };

    var $mask = $('<div>');
    $mask.attr('id', 'toc-mask');
    $('body').append($mask);
    $toc.on('click', toggleToc);
    $mask.on('click', toggleToc);
    $('.navbar-main .catalogue').on('click', toggleToc);
  }
})(jQuery, window.moment, window.ClipboardJS, window.IcarusThemeSettings);

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
