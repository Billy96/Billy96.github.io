{"pages":[],"posts":[{"title":"hexo 搭建博客","text":"安装并运行12345npm install -g hexohexo inithexo server 为了编写更方便，添加热更新hexo-browsersync 1npm install hexo-browsersync 创建文章首先在package.json里加一行命令：&quot;hexo&quot;: &quot;./node_modules/.bin/hexo&quot;，再运行 1npm run hexo new '文章名' 默认在source/_posts下生成markdown文件 部署到github首先在项目根目录_config.yml文件下找到deploy字段，然后将它补充完整 1234deploy: type: git repo: &lt;你的仓库地址&gt; branch: master 注意：repo的取名格式为&lt;user-name&gt;.github.io 这些都填完后，我们需要下载一个插件将本地项目推到github上去 1npm install hexo-deployer-git 安装完后在package.json上添加一条命令&quot;build&quot;: &quot;hexo clean &amp; hexo deploy&quot; 运行 1npm run build 运行成功后网页上打开https://&lt;user-name&gt;github.io，如果正常显示了那就是成功啦！","link":"/2020/11/25/hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"title":"hexo-添加gitalk评论","text":"注册github OAuth applicationOAuth应用注册地址 注册成功后，需要保存client id和client secret 接入gitalk1、找到themes/landscape/_config.yml文件，写上配置12345678910111213# CDN地址cdn: gitalk: js: //cdn.bootcss.com/gitalk/1.6.2/gitalk.min.js css: //cdn.bootcss.com/gitalk/1.6.2/gitalk.min.css# gitalk settingsgitalk: enable: true # 用来做启用判断可以不用 clientID: xxx # `Github OAuth Application clientID` clientSecret: xxx # `Github OAuth Application clientSecret` repo: xxx # 储存评论issue的github仓库名，仅需要仓库名字即可 owner: xxx # GitHub repository 所有者，可以是个人或者组织。 admin: '[&quot;xxx&quot;]' # GitHub repository 的所有者和合作者 (对这个 repository 有写权限的用户)。 2、修改 themes/landscape/layout/_partial/article.ejs查看代码 >folded1234567891011121314151617181920&lt;footer class=&quot;article-footer&quot;&gt; &lt;a data-url=&quot;&lt;%- post.permalink %&gt;&quot; data-id=&quot;&lt;%= post._id %&gt;&quot; class=&quot;article-share-link&quot;&gt;&lt;%= __('share') %&gt;&lt;/a&gt;- &lt;% if (post.comments &amp;&amp; config.disqus_shortname){ %&gt;- &lt;a href=&quot;&lt;%- post.permalink %&gt;#disqus_thread&quot; class=&quot;article-comment-link&quot;&gt;&lt;%= __('comment') %&gt;&lt;/a&gt;+ &lt;% if (post.comments &amp;&amp; theme.gitalk.enable){ %&gt;+ &lt;a href=&quot;&lt;%- post.permalink %&gt;#gitalk_container&quot; class=&quot;article-comment-link&quot;&gt;&lt;%= __('comment') %&gt;&lt;/a&gt; &lt;% } %&gt; &lt;%- partial('post/tag') %&gt;&lt;/footer&gt;-&lt;% if (!index &amp;&amp; post.comments &amp;&amp; config.disqus_shortname){ %&gt;+&lt;% if (!index &amp;&amp; post.comments &amp;&amp; theme.gitalk.enable){ %&gt;&lt;section id=&quot;comments&quot;&gt;- &lt;div id=&quot;disqus_thread&quot;&gt;- &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;//disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;+ &lt;div id=&quot;gitalk_container&quot;&gt;+ &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;//gitalk.github.io/&quot;&gt;comments powered by GITALK.&lt;/a&gt;&lt;/noscript&gt; &lt;/div&gt;&lt;/section&gt;&lt;% } %&gt; 3、修改 themes/landscape/layout/_partial/after-footer.ejs查看代码 >folded1234567891011121314151617181920212223242526272829303132-&lt;% if (config.disqus_shortname){ %&gt;-&lt;script&gt;- var disqus_shortname = '&lt;%= config.disqus_shortname %&gt;';- &lt;% if (page.permalink){ %&gt;- var disqus_url = '&lt;%= page.permalink %&gt;';- &lt;% } %&gt;- (function(){- var dsq = document.createElement('script');- dsq.type = 'text/javascript';- dsq.async = true;- dsq.src = '//' + disqus_shortname + '.disqus.com/&lt;% if (page.comments) { %&gt;embed.js&lt;% } else { %&gt;count.js&lt;% } %&gt;';- (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);- })();-&lt;/script&gt;-&lt;% } %&gt;+&lt;% if (page.comments &amp;&amp; theme.gitalk.enable){ %&gt;+ &lt;%- js({+ src: 'js/comment',+ defer: true,+ id: 'comment_js_file',+ 'data-js': theme.cdn.gitalk.js,+ 'data-css': theme.cdn.gitalk.css,+ 'data-clientID': theme.gitalk.clientID,+ 'data-clientSecret': theme.gitalk.clientSecret,+ 'data-repo': theme.gitalk.repo,+ 'data-owner': theme.gitalk.owner,+ 'data-admin': theme.gitalk.admin,+ 'data-date': date(page.date, 'YYMMDD'),+ 'data-path': url_for(page.path),+ }) %&gt;+&lt;% } %&gt; 4、添加 themes/landscape/source/js/comment.js 文件拷贝以下代码到该文件内 查看代码 >folded12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364import md5 from 'blueimp-md5';(function (){ const dom = (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]); // 装评论模块的盒子 const node = document.getElementById('gitalk_container'); // script节点 const jsNode = document.getElementById('comment_js_file'); if (!node) { return; } if (!jsNode) { return; } // 获取配置信息 const js = jsNode.getAttribute('data-js'); const css = jsNode.getAttribute('data-css'); const clientID = jsNode.getAttribute('data-clientID'); const clientSecret = jsNode.getAttribute('data-clientSecret'); const repo = jsNode.getAttribute('data-repo'); const owner = jsNode.getAttribute('data-owner'); let admin = jsNode.getAttribute('data-admin'); const path = jsNode.getAttribute('data-path') || ''; if (!js || !css || !clientID || !clientSecret || !repo || !owner || !admin || !path) { return; } // 用于 id 前缀，防止 md5 之后的值相同 const date = jsNode.getAttribute('data-date') || ''; const id = date + '-' + md5(path); // 用于处理配置的 admin 字段不是字符串，是数组情况 try { admin = JSON.parse(admin) } catch (e) {} const talkJs = document.createElement('script'); talkJs.addEventListener('load', function () { // 文件加载成功初始评论 const gitalk = new Gitalk({ clientID, clientSecret, repo, owner, admin, id, // distractionFreeMode: true, }); gitalk.render('gitalk_container'); }); talkJs.async = true; talkJs.src = js; const talkCss = document.createElement('link'); talkCss.setAttribute('rel', 'stylesheet'); talkCss.setAttribute('href', css); dom.appendChild(talkJs); dom.appendChild(talkCss);})(); 5、添加es6语法支持，根目录 _config.yml 添加配置12345# hexo-renderer-babelify 插件 es6语法配置babelify: presets: - '@babel/preset-env' sourceMaps: true 6、安装各种依赖1npm install hexo-renderer-babelify @babel/preset-env blueimp-md5 安装完毕后运行项目就能看到gitalk啦！","link":"/2020/12/03/hexo-%E6%B7%BB%E5%8A%A0gitalk%E8%AF%84%E8%AE%BA/"},{"title":"mac上使用nginx","text":"nginx的基本命令123sudo nginx // 启动sudo nginx -s reload // 重启sudo nginx -s stop // 停止服务 spa项目的配置打开nginx.conf文件进行修改，修改完后保存文件并执行重启命令nginx.conf文件的位置（/usr/local/etc/nginx/nginx.conf） 123456789101112131415# spa项目的nginx配置server { listen 5000; # 自定义端口 server_name localhost; location / { root /Users/Billy/前端模版/core_class/build; # spa项目的打包后的目录 index index.html index.htm; try_files $uri $uri/ @router; # 需要指向下面的 @router 否则会出现路由在nginx中刷新出现404 } location @router { rewrite ^.*$ /index.html break; }}","link":"/2020/12/09/mac%E4%B8%8A%E4%BD%BF%E7%94%A8nginx/"},{"title":"mysql相关教程","text":"","link":"/2020/12/04/mysql%E7%9B%B8%E5%85%B3%E6%95%99%E7%A8%8B/"},{"title":"发布npm包","text":"一、注册npm账号npm注册地址 二、创建项目文件创建完文件夹后执行npm init，按照提示填入对应的信息。 三、登录npm账号在终端执行npm login，输入账号、密码、邮箱号。 四、发布登录成功后执行npm publish进行发布。 至此就已经发布完成了。","link":"/2020/12/09/%E5%8F%91%E5%B8%83npm%E5%8C%85/"}],"tags":[{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"nginx","slug":"nginx","link":"/tags/nginx/"},{"name":"npm","slug":"npm","link":"/tags/npm/"}],"categories":[{"name":"博客","slug":"博客","link":"/categories/%E5%8D%9A%E5%AE%A2/"}]}